import groovy.json.JsonSlurper
    try{     // Compute derived parameters  projectID=  projectAPIKey=  fileToScan=  language=  base64ProjectID="${projectID}".getBytes().encodeBase64().toString()  creds="Authorization: Bearer ${base64ProjectID}:${projectAPIKey}"  apiUrl="https://its-appsecportal.systems.uk.hsbc/appsec/api/v1/"  scanName="${env.JOB_NAME}_${env.BUILD_NUMBER}".split("/")[1]  fileVersion="${env.BUILD_NUMBER}"
  // Submit a file and get submission id  sleep 3  submissionCommand="curl -s -k -F projectId="+"${projectID}"+" -F version="+"${fileVersion}"+" -F language="+"${language}"+" -F scanfile=@"+"${fileToScan} ${apiUrl}"+"submissions/ -H \'"+"${creds}"+"\'"  submissionResponse=sh(returnStdout: true, script: "${submissionCommand}" )   println ${submissionResponse}  submissionid = (new JsonSlurper().parseText(submissionResponse)).submissionId  println SubmissiondID:${submissionid}
  sleep 10
  // Start a scan of that submission id and get a scan id  scanResponseCommand="curl -k -d "+"\'[{"+"\"name\":\"name\", "+"\"value\": "+"\""+"${scanName}"+"\", " +"\"filter\": "+"\""+"${scanConfig}"+"\""+"}]\'"+" -s -X POST "+"${apiUrl}"+"submissions/"+"${submissionid}"+"/scans/ "+"--header \'Content-Type:application/json\' -H \'"+"${creds}"+"\'"  println ${scanResponseCommand}")  scanResponse=sh returnStdout: true, script: "${scanResponseCommand}"   println "${scanResponse}"  scanId=(new JsonSlurper().parseText(scanResponse)).scanDetails.scanId  println "scanId:${scanId}"
  status="QUEUED"  while("${status}" == 'IN_PROGRESS' || "${status}" == 'QUEUED') {   sleep 10   statusCommand="curl -s -k -X GET "+"${apiUrl}"+"submissions/"+"${submissionid}"+"/scans/"+"${scanId}"+"/ -H \'"+"${creds}"+"\'"   statusResponse=sh returnStdout: true, script: "${statusCommand}"   println "${statusResponse}"   status=(new JsonSlurper().parseText(statusResponse)).status  }
  // Get the results  resultCommand="curl -s -k -X GET "+"${apiUrl}"+"submissions/"+"${submissionid}"+"/scans/"+"${scanId}"+"/results -H \'"+"${creds}"+"\'"  // Print the results  results=sh returnStdout: true, script: "${resultCommand}"  println "${results}"
  // Download the results as HTML --> this will be needed when we want to analyze the result from AppScan scan  //downloadCommand="curl -s -k -X GET "+"${apiUrl}"+"submissions/"+"${submissionid}"+"/scans/"+"${scanId}"+"/results/HTML -H \'"+"${creds}"+"\' "+ " > report.html"  //sh "${downloadCommand}"
  println +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")  println  Please follow below URL to see the complete scan result  ")  println https://its-appsecportal.systems.uk.hsbc/projects/${projectID}/submissions/${submissionid}/scans/${scanId}" (https://its-appsecportal.systems.uk.hsbc/projects/${projectID}/submissions/${submissionid}/scans/${scanId}%27))  println +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")    }catch(Exception e){     println "Exception Message : "  println e.toString() }    }
}
